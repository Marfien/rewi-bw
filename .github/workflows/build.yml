name: Build and Publish
run-name: Build '${{ github.ref_name }}' for Commit ${{ github.event.head_commit.message }}

on:
  push:
    tags:
      - "*"
    branches:
      - main
      - develop

env:
  TAG: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Maven
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          cache: 'gradle'
          java-version: '8'
      - name: Get Maven cache
        uses: actions/cache@v4
        id: cache-maven
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven
      - name: Install Spigot in local maven repo
        if: steps.cache-maven.outputs.cache-hit != 'true'
        run: |
          wget -O BuildTools.jar https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar
          java -jar BuildTools.jar --rev 1.8.8
      - name: Build with Gradle
        run: ./gradlew clean shadowJar --no-daemon --parallel
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: '**/build/libs/*.jar'

  publish:
    needs: build
    runs-on: ubuntu-latest
    # Only run on main branch or tags
    if: github.ref_type == 'tag' || (github.ref_type == 'branch' && contains('main develop', github.ref_name))
    strategy:
      matrix:
        online_mode: [true, false]
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64
      - name: Build and push
        uses: docker/bake-action@v4
        env:
          ONLINE_MODE: ${{ matrix.online_mode }}
        with:
          push: true
          pull: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
